{"version":3,"sources":["node_modules/uuid/lib/rng-browser.js","node_modules/uuid/lib/bytesToUuid.js","node_modules/uuid/v1.js","utils/style-snippets.js","utils/structure-lib.js","main.js"],"names":["exports","primaryColorMap","yellow","orange","red","magenta","violet","blue","cyan","green","htmlSnippets","taskTemplate","uuidGen","require","style","Task","title","description","dueDate","tags","isCompleted","list","uuid","moment","comments","update","descriptions","Comment","message","List","name","color","tasks","colorNames","Object","keys","randomColorIndex","Math","floor","length","random","primaryColorList","addTask","add","arguments","deleteTask","taskIndex","findTaskByUuid","console","log","deletedContent","splice","index","error","i","structure","$","ready","taskArea","append"],"mappings":"AKAA,AJAA,ADAA,AEAA,AEAA,ADAA;AFCA,ADAA,AEAA,ACCA;AEAA,AJAA,ADAA,AEAA,AEAA,ICAMuD,ADAA3C,OAAO,ECAE,CDACC,ECAEA,KDAK,CAAC,CCAC,CAAC,ODAH,CAAvB,kBCAyB,CAAzB;AJCA,ADAA,AEAA,ACAAb,OAAO,CAACC,eAAR,GAA0B;AEA1B,AJCA,ADAA,AEAA,AEDA,ADCEC,EAAAA,EEDIY,ADAAA,IDCE,CEDG,ADAA,CDCD,EEDID,ADAAA,OCAO,ADAA,ADAK,CEAJ,ADAA,qBAAD,CAArB,KCAqB,CAArB;AJEA,ADAA,AEAA,AEAA,ADAEV,EAAAA,MAAM,EAAE,SAFgB;AEE1BqD,AJCA,ADAA,AEAA,ACAEpD,CEDD,CAAC,AFCAA,GAAG,EAAE,KEDN,CAAD,CAAcqD,EFFY,GEE1B,CAAoB,YAAW;AAC7B,AJCF,ADAA,AEAA,ACAEpD,EAAAA,IEDIqD,GFCG,EAAE,GEDG,GAAGF,CAAC,CAAC,CFHO,QEGR,CAAhB;AACAE,AJCF,ADAA,AEAA,ACAEpD,EEDAoD,AFCApD,MAAM,EEDE,AFCA,CEDCqD,MAAT,CAAgB7C,AFJQ,KEIH,CAACJ,YAAN,CAAmBC,YAAnC;AAEA,AJAF,ADAA,AEAA,ACAEJ,EAAAA,IAAI,EAAE,SANkB;AFO1B,ADAA,AEAA,ACAEC,EAAAA,IAAI,EAAE,SAPkB;AEOxBgD,AJCF,ADAA,AEAA,ACAE/C,EEDA+C,AFCA/C,CEDC,CAAC,EAAD,CAAD,AFCK,EAAE;AECR,AJAD,ADAA,AEAA,ACT0B,CEE1B,AFFA;AFUA,ADAA,AEAA,ACCAT,OAAO,CAACU,YAAR,GAAuB;AFAvB,ADAA,AEAA,ACCEC,EAAAA,YAAY;AFAd,ADAA,AEAA,ACDuB,CAAvB;AFEA,ADAA,AEAA;ADCA,ADAA,AEAA;ADCA,ADAA,AEAA,AEFA,IAAMI,IAAI,GAAG,SAAPA,IAAO,CACPC,KADO,EACAC,WADA,EACaC,OADb,EACsBC,IADtB,EAEL;AHCR,ADAA,AEAA,AEDQ,MADiCC,WACjC,uEAD+C,KAC/C;AHER,ADAA,AEAA,AEFQ,MADsDC,IACtD,uEAD6D,OAC7D;AHG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","file":"main.1f19ae8e.js","sourceRoot":"..","sourcesContent":["// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","'use strict';\r\n\r\n/** Probably move this off to a module later */\r\nexports.primaryColorMap = {\r\n  yellow: '#b58900',\r\n  orange: '#cb4b16',\r\n  red: '#dc322f',\r\n  magenta: '#d33682',\r\n  violet: '6c71c4',\r\n  blue: '#268bd2',\r\n  cyan: '#2aa198',\r\n  green: '#859900',\r\n};\r\n\r\nexports.htmlSnippets = {\r\n  taskTemplate: `<div class=task'></div>`, \r\n\r\n};","'use strict';\r\n\r\nconst uuidGen = require('uuid/v1');\r\nconst style = require('./style-snippets.js')\r\n\r\n/**\r\n * Constructs task objects.\r\n * @constructor\r\n * @param {String} title - The short version of the task. Max 50 characters.\r\n * @param {String} description - The long version of what the task is.\r\n * @param {*} dueDate - The date the task is due for completion by.\r\n * - Should be implemented with moment.js.\r\n * - Should be DD/MM/YYYY format.\r\n * @param {String} list - The name of the list which this task belongs to.\r\n * Defaults to inbox.\r\n */\r\nconst Task = function (\r\n      title, description, dueDate, tags, isCompleted = false, list = 'inbox'\r\n      ) {\r\n  this.title = title;\r\n  this.uuid = uuidGen();\r\n  this.description = description;\r\n  this.list = list;\r\n  this.tags = tags;\r\n  this.dueDate = moment(dueDate);\r\n  this.isCompleted = isCompleted;\r\n  this.comments = [];\r\n  this.update = function(\r\n      title, descriptions, dueDate, tags, isCompleted = false, list\r\n      ) {\r\n  };\r\n  this.Comment = function (message) {\r\n    this.message = message;\r\n  }\r\n};\r\n\r\n\r\n/**\r\n* Creates a To-Do list.\r\n* @constructor\r\n* @param {String} name - The name of the list.\r\n* @param {String} color - The color to be selected, e.g. 'yellow'.\r\n* Defaults to a random color from primaryColorList.\r\n*/\r\nconst List = function (name, color) {\r\n  this.name = name;\r\n  this.uuid = uuidGen();\r\n  this.tasks = [];\r\n\r\n  // If list color wasn't selected, pick one from themese at random\r\n  if (!color) {\r\n    let colorNames = Object.keys(style.primaryColorMap);\r\n    randomColorIndex = Math.floor(colorNames.length * Math.random());\r\n    this.color =\r\n      style.primaryColorList(randomColorIndex);\r\n  } else {\r\n    this.color = color;\r\n  }\r\n\r\n  this.addTask = function() {\r\n    this.tasks.add(new Task(arguments));\r\n  };\r\n\r\n  this.deleteTask = function(uuid) {\r\n    let taskIndex = this.findTaskByUuid(uuid);\r\n\r\n    // If a hit was found, then delete that item from the array \r\n    if (taskIndex) {\r\n      console.log(`Deleting item from list...`)\r\n      let deletedContent = this.tasks.splice(index, 1);\r\n\r\n      // Sanity checks\r\n      if (deletedContent) {\r\n        console.error(`No items found in list: ${this.name} with ` +\r\n            `UUID: ${uuid}`);\r\n      } else if (deletedContent.length > 1) {\r\n        console.error(`Accidentally deleted ${deletedContent.length} items.`)\r\n      } else if (deletedContent) {\r\n        console.log(`Task was deleted from this list. ` +\r\n        `UUID: ${this.tasks[i].uuid}`);\r\n      }\r\n    };\r\n  };\r\n\r\n  this.findTaskByUuid = function(uuid) {\r\n    let index = null;\r\n\r\n    console.log(`Trying to find log with UUID: ${uuid}`)\r\n    // Find what the index of the task is with the UUID.\r\n    for (let i = 0; i < this.tasks.length; i++) {\r\n      if (this.tasks[i] === uuid) {\r\n        index = i;\r\n\r\n        if (index) { // exit the search if a hit is found.\r\n          return index;\r\n        }\r\n      }\r\n    }\r\n    \r\n    return `UUID: ${uuid} not found in list: ${this.name}.`;\r\n  }\r\n};\r\n","'use strict';\r\n\r\nconst structure = require('./utils/structure-lib.js');\r\nconst style = require('./utils/style-snippets.js');\r\n\r\n$('document').ready(function() {\r\n  let taskArea = $('section');\r\n  taskArea.append(style.htmlSnippets.taskTemplate);\r\n\r\n  /** Initialize all event listeners. **/\r\n  $('')\r\n\r\n});"]}