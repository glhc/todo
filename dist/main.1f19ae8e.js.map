{"version":3,"sources":["node_modules/shortid/lib/random/random-from-seed.js","node_modules/shortid/lib/alphabet.js","node_modules/shortid/lib/random/random-byte-browser.js","node_modules/nanoid/format.js","node_modules/shortid/lib/generate.js","node_modules/shortid/lib/build.js","node_modules/shortid/lib/is-valid.js","node_modules/shortid/lib/util/cluster-worker-id-browser.js","node_modules/shortid/lib/index.js","node_modules/shortid/index.js","utils/style-snippets.js","utils/structure-lib.js","utils/utils.js","main.js"],"names":["exports","primaryColorMap","yellow","orange","red","magenta","violet","blue","cyan","green","htmlSnippets","taskTemplate","taskTitle","taskDeleteButton","taskEditButton","taskUpdateButton","taskAddButton","taskEditSearchBar","shortid","require","style","Task","title","description","tags","isCompleted","list","uuid","generate","comments","update","descriptions","dueDate","Comment","message","List","name","color","uuidGen","tasks","colorNames","Object","keys","randomColorIndex","Math","floor","length","random","primaryColorList","addTask","add","deleteTask","taskIndex","findTaskByUuid","console","log","deletedContent","splice","index","error","i","Error","arrangeListByDueDate","appendTask","selector","task","append","$","on","removedStuff","replaceWith","e","keyCode","val","remove","editTask","html","getTaskTitleFromInput","structure","utils","ready","testTask","createdTask"],"mappings":"AaAA,AVAA,AMAA,ARAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AOAA,AIAA,ADAA,AEAA;ATCA,AMAA,ARAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AOAA,AGCA;AGAA,AVAA,AMAA,ARAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AOAA,AIAA,ACAA,ICAM8E,AFAA5D,ACAAE,KAAK,EDAE,CCACD,CCAC,CFACA,EEAEA,GDAG,CAAC,CDAC,CAAC,CEAC,CAAC,OFAH,CAAvB,SCAqB,CAArB,QCAyB,CAAzB;AVCA,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AOAA,AGAAnB,OAAO,CAACC,eAAR,GAA0B;AGA1B,AVCA,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AWDA,ADCEC,AEAFF,EFAEE,EGDIkB,AFAAA,GCCC,CFAC,AEAA0C,CCDG,AFAA,CDCD,EGDI3C,AFAAA,OEAO,AFAA,ADAK,CGAJ,AFAA,QCCtB,GAA+B,UDDV,CAArB,CCC0C,CAAE,CAA5C,ECDqB,CAArB;AVEA,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AWAA,ADAEhB,EAAAA,MAAM,EAAE,SAFgB;AGC1B,AVEA,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AUAEC,AEAFJ,EFAEI,EGFI2E,CHED,EAAE,AEAA,CAAChB,CCFG,GAAG5C,IHDY,EEG1B,CCFqB,CAAC,CDED,UAAS6C,OCFT,CAArB,ADEqB,EAAmBC,IAAnB,EAAyB;ATC9C,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AUAE5D,AEAA2D,EFAA3D,AEAA2D,OFAO,CEAC,CFAC,AEAAE,MAAT,GFJwB,kCEIqBD,IAAI,CAACtC,IAAlD;ACDFwC,AVEA,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AUAE7D,AEAA6D,CCFD,CAAC,AHEA7D,AEAA6D,CAAC,KFAK,EAAE,EGFT,CAAD,CAAca,CDENf,GFLkB,CGG1B,ADEY,CCFQ,ADEPtC,IAAV,EAAD,CAAmBuC,KCFW,CDE9B,qDAAqED,IAAI,CAAC3C,KAA1E,aAF4C,CAE8C;ACD1F,AVEF,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AUAEf,EAAAA,IGFI0E,AHEA,EAAE,MGFM,GAAG,AHJS,IGILH,SAAS,CAACzD,IAAd,CACb,qCADa,EAC0B;AACvC,AVCJ,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AUAEb,AEAA2D,EFAA3D,AEAA2D,CAAC,GFAG,EAAE,OEAAF,EFPkB,EEOd,CAACtC,IAAV,EAAD,CAAmBuC,MAAnB,CAA0B9C,KAAK,CAACV,MCHjB,CAAf,KDG0B,CAAmBI,cAA7C,EAJ4C,CAIkB;ACE9DiE,AVDF,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AUAEtE,EGCAsE,AHDAtE,KGCK,AHDA,CGCCsD,CHDC,SGCP,CAAiBI,CAAC,CAAC,YAAD,CAAlB,EAAkCc,QAAlC,EAN8B,CAQ9B;AVFF,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AUT0B,AESxBd,CFTF,CESEA,CAAC,YAAKF,IAAI,CAACtC,IAAV,EAAD,CAAmBuC,MAAnB,CAA0B9C,KAAK,CAACV,YAAN,CAAmBG,gBAA7C,EAN4C,CAMoB;ACGhEsD,AVFF,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AUCAnE,EGCEmE,CAAC,CAAC,GHDG,CAACzD,YAAR,CGCG,CAAD,CAAqB0D,AHDA,EGCrB,CAAwB,OAAxB,EAAiC,UAAUG,CAAV,EAAa;AAC5CjB,AVFJ,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AUCE3C,AEDAwD,EFCAxD,AEDAwD,CAAC,CCECb,OAAO,CAACC,EHDE,CGCV,ADFIU,IAAI,CAACtC,IAAV,iBFAoB,OEArB,CAAqCyC,EAArC,CAAwC,OAAxC,EAAiD,YAAW;ATC9D,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AUCExD,AEF8D,EFE9DA,SAAS,kDAFY;AGGnB,AVDJ,AFAA,AIAA,ADAA,AIAA,ANAA,AFAA,AUCEC,AEFE,EFEFA,MGAM0D,ADFAF,CCEC,CAACG,OAAF,CHAU,EEFE,ECEE,CDFCL,CCEnB,ADFoB,ECEE,UDFGF,IAAI,CAACtC,IAAV,kBAAD,CAA+B2C,WAA/B,CAA2ClD,KAAK,CAACV,YAAN,CAAmBO,OFD9D,UECA,CAAnB;ACGEqC,AVDN,AFAA,AIAA,ADAA,AIAA,ANAA,AFAA,AUCExC,AEFIqD,EFEJrD,EEFIqD,CAAC,CCEDb,OAAO,CAACC,EHAE,CGAV,ADFMU,CCEM,GDFF,CAACtC,IAAV,gBCED,ODFA,CAAoCyC,EAApC,CAAuC,OAAvC,EAAgD,UAASG,CAAT,EAAY,qBFF3C;AGMjB,AVFN,AFAA,AIAA,ADAA,AIAA,ANAA,AFAA,AWFAvE,ADGEe,AEFMuC,EFENvC,IEFMuC,CDDD,CAACjC,EEIEC,EFJV,CCCe,CAACiC,CCGD,AFJA,ECCP,CCGUY,AHDA,AEFE,CCGD,CAAC,KFHd7C,KADS,EACFC,ECAL,GCGW,CAAD,CAAqBkD,GAArB,CFJH,CEIT,0CHNiB;AGOjBnB,AVFN,AFAA,AIAA,ADAA,AIAA,ANAA,AFAA,AWFyB,ADGvBtC,EAAAA,IGCIsC,OAAO,CAACC,CHDC,EGCT,CAAY,QAAZ,yCHPiB;AGQjBD,AVFN,AFAA,AIAA,ADAA,AIAA,ANAA,AFAA,AWHuC9B,ADIrCP,AEHM,EFGNA,ECLa,EEMTqC,AFJE,ICAIiB,CAAC,CAACC,CCID,CAACjB,GAAR,CAAYjC,CHDC,AEHP,ICIN,CDJoB,EAAlB,EAAsB;ACMxB,AVHN,AFAA,AIAA,ADAA,AIAA,ANAA,AFAA,AWHQ,ADJe,AEKbgC,CFLV,KCG6C7B,ECEnC6B,ECKA4B,KDLO,CAAC3B,CDDV,ECCE,CAAY,CCKD,GAAG,IAAIuB,SAAS,ADL3B,CCK4BzD,IAAd,CAAmBC,KAAnB,CAAlB,uCFPqD,KACnD;AEOFgC,AVHN,AFAA,AIAA,AGAA,ARAA,AWJQ,ACEEW,MCKJX,AFR4D5B,ECGxDuC,EDFF,ECEM,CCKD,ADLE3C,CCKDiC,GAAR,CAAY,ADLR,GAAaY,CAAC,UCKlB,EDLuBF,IAAI,CAACtC,IAAV,uBAAD,CAAoC8C,GAApC,EAAb,SDH+D,OACjE;AEQFnB,AVHN,AFAA,AIAA,AGAA,ARAA,AWJE,ACEQa,MCKJb,CFPChC,CCEG6C,CAAC,GDFT,CEOW,CAACZ,CFPCjC,EEOT,CAAY4D,EFPhB,CCEcjB,IAAI,CAACtC,GCKf,CDLK,uBAAD,CAAoC2C,WAApC,qDAA2FL,IAAI,CAAC3C,KAAhG;ACOJ6C,AVJN,AFAA,AIAA,AGAA,ARAA,AWJE,ACEO,MCMHA,CAAC,AFRAxC,CEQC,GFRN,GAAYT,OAAO,CAACU,GEQf,CAAD,CAAqB6C,GAArB,AFRQ,CEQiB,CFR7B,CEQI,EAXoB,CAWU;AVHpC,AFAA,AIAA,AGAA,ARAA,AWJE,ACEK,KAPD,EDKClD,WAAL,GAAmBA,WAAnB;AEQIwD,AVHN,AFAA,AIAA,AGAA,AGJE,ACEC,GAVD,GCeIA,CFPCrD,IEOI,AFPT,CEOUqC,EFPErC,IAAZ,IEOI,CAAiByC,CAAC,CAAC,YAAD,CAAlB,EAAkCe,WAAlC;AACD,AVHL,AFAA,AIAA,AGAA,AGJE,ACGAf,EAAAA,CAAC,IDHI3C,IAAL,GAAYA,CCGNyC,GDHN,CALM,ACQI,CDFV,ACEWtC,IAAV,0BAAD,CAAuCyC,EAAvC,CAA0C,OAA1C,EAAmD,YAAW;ACK7D,AVHH,AFAA,AIAA,AGAA,AIFkE,GCXhE;AAkBAD,AVJF,AFAA,AIAA,AGAA,AGJE,ACEEA,ECMFA,CAAC,CAAC,ADNAA,CAAC,EDFE1C,UCEGwC,CDFR,GAAmBxC,ACEP,CCMX,ADNYE,CCMb,CAAsByC,EAAtB,ADNG,CCMsB,CDNvB,CAAmBM,GDFrB,EEQA,CDNE,CCMgC,YAAY;AAC5C,AVJJ,AFAA,AIAA,AGAA,AGJE,ACEC,GAFD,IDAK7C,CEQCP,KAAK,EFRX,CEQc6C,CAAC,CAAC,AFRA,EAAhB,eEQe,CAAD,CAAqBM,GAArB,EAAZ;AACAnB,AVJJ,AFAA,AIAA,AGAA,AIFC,CAvBD,GC6BIA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,AVJJ,AFAA,AIAA,AGAA,AGLE,IESEA,GFTGxB,IESI,CAACyB,CFTV,EESE,CAAYjC,AFTA,KESZ,KFREA,KADU,EACHS,YADG,EACWC,OADX,EACoBR,IADpB,EAER;AESJ,AVLJ,AFAA,AIAA,AGAA,AGJQ,ACERxB,OAAO,CCOCkF,AFVkCzD,ACGlCkD,QAAR,GCOmB,AFTX,ACEW,GCOG,IAAIG,GDPEd,MCOO,CAAC3C,CDPjB,EAAmB4C,CCOhB,CAAmB3C,EDPtB,EAAyB,CCOtB,CAAlB,2CFVoD,KAChD;AEUJgC,AVLJ,AFAA,AIAA,AGAA,AGLQ,ACGNa,EAAAA,CAAC,CCOCb,IFX2D5B,GEWpD,CAAC6B,AFVJ,GEUJ,ADPIU,CCOQ,GDPJ,CAACtC,IAAV,EAAD,CAAmBiD,GCOjB,CDPF,CAAwBxD,KAAK,CAACV,YAAN,CAAmBO,iBAA3C;ACQEqC,AVLJ,AFAA,AIAA,AGAA,AGLG,ACGF,CAFD,EDJE,CEaEA,OAAO,CAACC,GAAR,CAAY2B,WAAZ;AAEAf,AVNJ,AFAA,AIAA,AGAA,AIDA,ICOIA,CAAC,CAAC,iBAAD,CAAD,CAAqBM,GAArB,CAAyB,EAAzB,EAT4C,CASd;AVLlC,AFAA,AIAA,AGAA,AGNE,OAAKxC,OAAL,GAAe,UAAUC,OAAV,EAAmB;AEYhC6C,AVLJ,AFAA,AIAA,AGAA,AGNI,IEWAA,KAAK,AFXA7C,CEWC6B,MFXN,GAAe7B,CEWf,CAAiBiC,CAAC,CAAC,GFXnB,SEWkB,CAAlB,EAAkCe,WAAlC;AACD,AVLH,AFAA,AIAA,AGAA,AGNG,GEAD,AFFA;AEeD,AVND,AFAA,AIAA,AGAA,AGNC,CE5BD,AFUA;ARyBA,AFAA,AIAA,AGAA,AGJA,ACCAlF,OAAO,CAAC6E,qBAAR,GAAgC,YAAW;ATI3C,AFAA,AIAA,AGAA,AIHE,SAAOV,CAAC,CAAC,iBAAD,CAAD,CAAqBM,GAArB,EAAP;ATIF,AFAA,AIAA,AGAA,AIHC,CAFD;ATMA,AFAA,AIAA,AGAA;ALCA,AFAA,AIAA,AGAA;ALCA,AFAA,AIAA,AGAA;ALCA,AFAA,AOAA;ALCA,AFAA,AOAA;ALCA,AFAA,AOAA;ALCA,AFAA,AOAA,AGNAzE,OAAO,CAACmC,IAAR,GAAe,UAAUC,IAAV,EAAgBC,KAAhB,EAAuB;AROtC,AFAA,AOAA,AGNE,OAAKD,IAAL,GAAYA,IAAZ;AVOF,AOAA,AGNE,OAAKT,IAAL,GAAYW,OAAO,EAAnB;AVOF,AOAA,AGNE,OAAKC,KAAL,GAAa,EAAb,CAHoC,CAKpC;AVKF,AOAA;APCA,AOAA,AGLE,MAAI,CAACF,KAAL,EAAY;AVMd,AOAA,AGLI,QAAIG,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYtB,KAAK,CAACnB,eAAlB,CAAjB;AVMJ,AOAA,AGLI0C,IAAAA,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAAWL,UAAU,CAACM,MAAX,GAAoBF,IAAI,CAACG,MAAL,EAA/B,CAAnB;AVMJ,AOAA,AGLI,SAAKV,KAAL,GACEjB,KAAK,CAAC4B,gBAAN,CAAuBL,gBAAvB,CADF;AVMJ,AOAA,AGJG,GALD,MAKO;AVKT,AOAA,AGJI,SAAKN,KAAL,GAAaA,KAAb;AVKJ,AOAA,AGJG;AVKH,AOAA;APCA,AUJE,OAAKY,OAAL,GAAe,YAAW;AVK5B,AUJI,SAAKV,KAAL,CAAWW,GAAX,CAAe,IAAI7B,IAAJ,EAAf;AVKJ,AUJG,GAFD;AVOF;AACA,AUJE,OAAK8B,UAAL,GAAkB,UAASxB,IAAT,EAAe;AVKnC,AUJI,QAAIyB,SAAS,GAAG,KAAKC,cAAL,CAAoB1B,IAApB,CAAhB,CAD+B,CAG/B;AVGJ;AACA,AUHI,QAAIyB,SAAJ,EAAe;AVInB,AUHME,MAAAA,OAAO,CAACC,GAAR;AVIN,AUHM,UAAIC,cAAc,GAAG,KAAKjB,KAAL,CAAWkB,MAAX,CAAkBC,KAAlB,EAAyB,CAAzB,CAArB,CAFa,CAIb;AVEN;AACA,AUFM,UAAIF,cAAJ,EAAoB;AVG1B,AUFQF,QAAAA,OAAO,CAACK,KAAR,CAAc,kCAA2B,KAAKvB,IAAhC,8BACDT,IADC,CAAd;AVGR,AUDO,OAHD,MAGO,IAAI6B,cAAc,CAACV,MAAf,GAAwB,CAA5B,EAA+B;AVE5C,AUDQQ,QAAAA,OAAO,CAACK,KAAR,gCAAsCH,cAAc,CAACV,MAArD;AVER,AUDO,OAFM,MAEA,IAAIU,cAAJ,EAAoB;AVEjC,AUDQF,QAAAA,OAAO,CAACC,GAAR,CAAY,sDACH,KAAKhB,KAAL,CAAWqB,CAAX,EAAcjC,IADX,CAAZ;AVER,AUAO;AVCP,AUAK;AVCL;AACA,AUFK;AVGL,AUFG,GAnBD;AVsBF;AACA,AUFE,OAAK0B,cAAL,GAAsB,UAAS1B,IAAT,EAAe;AVGvC,AUFI,QAAI+B,KAAK,GAAG,IAAZ;AVGJ,AUDIJ,IAAAA,OAAO,CAACC,GAAR,yCAA6C5B,IAA7C,GAHmC,CAInC;AVCJ;AACA,AUDI,SAAK,IAAIiC,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG,KAAKrB,KAAL,CAAWO,MAA/B,EAAuCc,EAAC,EAAxC,EAA4C;AVEhD,AUDM,UAAI,KAAKrB,KAAL,CAAWqB,EAAX,MAAkBjC,IAAtB,EAA4B;AVElC,AUDQ+B,QAAAA,KAAK,GAAGE,EAAR;AVER;AACA,AUDQ,YAAIF,KAAJ,EAAW;AVEnB,AUFqB;AVGrB,AUFU,iBAAOA,KAAP;AVGV,AUFS;AVGT,AUFO;AVGP,AUFK;AVGL;AACA,AUFI,UAAM,IAAIG,KAAJ,iBAAmBlC,IAAnB,iCAA8C,KAAKS,IAAnD,OAAN;AVGJ,AUFG,GAhBD;AVmBF,AUFC,CAzDD","file":"main.1f19ae8e.js","sourceRoot":"..","sourcesContent":["'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","/**\n * Secure random string generator with custom alphabet.\n *\n * Alphabet must contain 256 symbols or less. Otherwise, the generator\n * will not be secure.\n *\n * @param {generator} random The random bytes generator.\n * @param {string} alphabet Symbols to be used in new random string.\n * @param {size} size The number of symbols in new random string.\n *\n * @return {string} Random string.\n *\n * @example\n * const format = require('nanoid/format')\n *\n * function random (size) {\n *   const result = []\n *   for (let i = 0; i < size; i++) {\n *     result.push(randomByte())\n *   }\n *   return result\n * }\n *\n * format(random, \"abcdef\", 5) //=> \"fbaef\"\n *\n * @name format\n * @function\n */\nmodule.exports = function (random, alphabet, size) {\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  var step = Math.ceil(1.6 * mask * size / alphabet.length)\n  size = +size\n\n  var id = ''\n  while (true) {\n    var bytes = random(step)\n    for (var i = 0; i < step; i++) {\n      var byte = bytes[i] & mask\n      if (alphabet[byte]) {\n        id += alphabet[byte]\n        if (id.length === size) return id\n      }\n    }\n  }\n}\n\n/**\n * @callback generator\n * @param {number} bytes The number of bytes to generate.\n * @return {number[]} Random bytes.\n */\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nmodule.exports = 0;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\r\n\r\n/** Probably move this off to a module later */\r\nexports.primaryColorMap = {\r\n  yellow: '#b58900',\r\n  orange: '#cb4b16',\r\n  red: '#dc322f',\r\n  magenta: '#d33682',\r\n  violet: '6c71c4',\r\n  blue: '#268bd2',\r\n  cyan: '#2aa198',\r\n  green: '#859900',\r\n};\r\n\r\nexports.htmlSnippets = {\r\n  taskTemplate: `<li class='task'></div>`,\r\n  taskTitle: `<div class='task-title col-8'>Task Title</div>`,\r\n  taskDeleteButton: `<button class='btn col-1 material-icons' id='task-delete-button'>delete</button>`,\r\n  taskEditButton: `<button class='btn col-1 material-icons' id='task-edit-button'>edit</button>`,\r\n  taskUpdateButton: `<button class='btn task-update-button col-1>Update Task</button>`,\r\n  taskAddButton: `<div class='task-add-button col-1>Add Task</div>`,\r\n  taskEditSearchBar: `<input class=\"form-control col-10 d-inline\" type=\"text\" required=\"true\" id=\"edit-task-input\" placeholder=\"New description goes here\">`,\r\n};\r\n","'use strict';\r\n\r\nconst shortid = require('shortid');\r\nconst style = require('./style-snippets.js')\r\n\r\n/**\r\n * Constructs task objects.\r\n * @constructor\r\n * @param {String} title - The short version of the task. Max 50 characters.\r\n * @param {String} description - The long version of what the task is.\r\n * @param {*} dueDate - The date the task is due for completion by.\r\n * - Should be implemented with moment.js.\r\n * - Should be DD/MM/YYYY format.\r\n * @param {String} list - The name of the list which this task belongs to.\r\n * Defaults to inbox.\r\n */\r\nexports.Task = function (\r\n      title, description,/* dueDate,*/ tags, isCompleted = false, list = 'inbox'\r\n      ) {\r\n  this.title = title;\r\n  this.uuid = shortid.generate();\r\n  this.description = description;\r\n  this.list = list;\r\n  this.tags = tags;\r\n  // this.dueDate = moment(dueDate);\r\n  this.isCompleted = isCompleted;\r\n  this.comments = [];\r\n  this.update = function(\r\n      title, descriptions, dueDate, tags, isCompleted = false, list\r\n      ) {\r\n  };\r\n  this.Comment = function (message) {\r\n    this.message = message;\r\n  }\r\n};\r\n\r\n\r\n/**\r\n* Creates a To-Do list.\r\n* @constructor\r\n* @param {String} name - The name of the list.\r\n* @param {String} color - The color to be selected, e.g. 'yellow'.\r\n* Defaults to a random color from primaryColorList.\r\n*/\r\nexports.List = function (name, color) {\r\n  this.name = name;\r\n  this.uuid = uuidGen();\r\n  this.tasks = [];\r\n\r\n  // If list color wasn't selected, pick one from themese at random\r\n  if (!color) {\r\n    let colorNames = Object.keys(style.primaryColorMap);\r\n    randomColorIndex = Math.floor(colorNames.length * Math.random());\r\n    this.color =\r\n      style.primaryColorList(randomColorIndex);\r\n  } else {\r\n    this.color = color;\r\n  }\r\n\r\n  this.addTask = function() {\r\n    this.tasks.add(new Task());\r\n  };\r\n\r\n  this.deleteTask = function(uuid) {\r\n    let taskIndex = this.findTaskByUuid(uuid);\r\n\r\n    // If a hit was found, then delete that item from the array \r\n    if (taskIndex) {\r\n      console.log(`Deleting item from list...`)\r\n      let deletedContent = this.tasks.splice(index, 1);\r\n\r\n      // Sanity checks\r\n      if (deletedContent) {\r\n        console.error(`No items found in list: ${this.name} with ` +\r\n            `UUID: ${uuid}`);\r\n      } else if (deletedContent.length > 1) {\r\n        console.error(`Accidentally deleted ${deletedContent.length} items.`)\r\n      } else if (deletedContent) {\r\n        console.log(`Task was deleted from this list. ` +\r\n        `UUID: ${this.tasks[i].uuid}`);\r\n      }\r\n    };\r\n  };\r\n\r\n  this.findTaskByUuid = function(uuid) {\r\n    let index = null;\r\n\r\n    console.log(`Trying to find log with UUID: ${uuid}`)\r\n    // Find what the index of the task is with the UUID.\r\n    for (let i = 0; i < this.tasks.length; i++) {\r\n      if (this.tasks[i] === uuid) {\r\n        index = i;\r\n\r\n        if (index) { // exit the search if a hit is found.\r\n          return index;\r\n        }\r\n      }\r\n    }\r\n    \r\n    throw new Error(`UUID: ${uuid} not found in list: ${this.name}.`);\r\n  }\r\n};\r\n","'use strict';\r\n\r\nconst style = require('./style-snippets.js')\r\n\r\nexports.arrangeListByDueDate = function() {};\r\n\r\nexports.appendTask = function(selector, task) {\r\n  selector.append(`<li class='task-item' id='${task.uuid}'></li>`);\r\n  $(`#${task.uuid}`).append(`<div class=\"task-title col-10 d-inline\">${task.title}</div>`); // put text into task element\r\n  \r\n  $(`#${task.uuid}`).append(style.htmlSnippets.taskEditButton); // add edit button\r\n  \r\n  $(`#${task.uuid}`).append(style.htmlSnippets.taskDeleteButton); // add delete button\r\n  \r\n  $(`#${task.uuid} #task-edit-button`).on('click', function() { // Add edit button click listener\r\n    let removedStuff = $(`#${task.uuid} .task-title`).replaceWith(style.htmlSnippets.taskEditSearchBar);\r\n      $(`#${task.uuid} #edit-task-input`).on('keyup', function(e) {\r\n        console.log('keyup detected')\r\n        if (e.keyCode === 13) {\r\n          console.log('enter detected.')\r\n          task.title = $(`#${task.uuid} #edit-task-input`).val();\r\n          $(`#${task.uuid} #edit-task-input`).replaceWith(`<div class=\"task-title col-10 d-inline\">${task.title}</div>`);\r\n        }\r\n      });\r\n  });\r\n\r\n  $(`#${task.uuid} #task-delete-button`).on('click', function() { // Add delete button click listener\r\n    $(`#${task.uuid}`).remove();\r\n  });\r\n}\r\n\r\nexports.editTask = function(selector, task) {\r\n  $(`#${task.uuid}`).html(style.htmlSnippets.taskEditSearchBar);\r\n}\r\n\r\n/**\r\n * When triggered, get the value in the input field.\r\n */\r\nexports.getTaskTitleFromInput = function() {\r\n  return $('#add-task-input').val()\r\n}","'use strict';\r\n\r\nconst structure = require('./utils/structure-lib.js');\r\nconst style = require('./utils/style-snippets.js');\r\nconst utils = require('./utils/utils.js');\r\n\r\n$('document').ready(function () {\r\n  let testTask = new structure.Task(\r\n    'This task was created using jQuery.', // title\r\n    'This is a long description of a test task.', // description\r\n  );\r\n\r\n  utils.appendTask($('.task-list'), testTask);\r\n\r\n  // Add task listener\r\n  $('#add-task-input').on('keyup', function (e) {\r\n    console.log(`keyup detected in task title add field.`);\r\n    if (e.keyCode === 13) {\r\n      console.log('keyup: Enter detected.')\r\n\r\n      let title = $('#add-task-input').val();\r\n      console.log('title:');\r\n      console.log(title);\r\n\r\n      let createdTask = new structure.Task(title);\r\n      console.log('createdTask:')\r\n      console.log(createdTask);\r\n\r\n      $('#add-task-input').val(''); // clear input field after enter\r\n      utils.appendTask($('.task-list'), createdTask);\r\n    } \r\n  });\r\n\r\n  $('#add-task-button').on('click', function () {\r\n    let title = $('#add-task-input').val();\r\n    console.log('title:');\r\n    console.log(title);\r\n\r\n    let createdTask = new structure.Task(title);\r\n    console.log('createdTask:')\r\n    console.log(createdTask);\r\n\r\n    $('#add-task-input').val(''); // clear input field after enter\r\n    utils.appendTask($('.task-list'), createdTask);\r\n  });\r\n\r\n});"]}