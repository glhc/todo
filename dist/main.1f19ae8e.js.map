{"version":3,"sources":["node_modules/shortid/lib/random/random-from-seed.js","node_modules/shortid/lib/alphabet.js","node_modules/shortid/lib/random/random-byte-browser.js","node_modules/nanoid/format.js","node_modules/shortid/lib/generate.js","node_modules/shortid/lib/build.js","node_modules/shortid/lib/is-valid.js","node_modules/shortid/lib/util/cluster-worker-id-browser.js","node_modules/shortid/lib/index.js","node_modules/shortid/index.js","utils/html-templates.js","utils/constructors.js","utils/utils.js","main.js"],"names":["primaryColorMap","yellow","orange","red","magenta","violet","blue","cyan","green","htmlSnippets","taskTemplate","taskTitle","taskDeleteButton","taskEditButton","taskUpdateButton","taskAddButton","taskEditSearchBar","shortid","require","style","Task","title","uuid","generate","List","name","color","tasks","colorNames","Object","keys","randomColorIndex","Math","floor","length","random","primaryColorList","addTask","add","deleteTask","taskIndex","findTaskByUuid","console","log","deletedContent","splice","index","error","i","appendTask","selector","task","append","$","on","removedStuff","replaceWith","e","keyCode","val","remove","editTask","html","structure","utils","ready","testTask","initializePage","createdTask","listenForMenuButton","click","toggleClass"],"mappings":"AaAA,AVAA,AMAA,ARAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AOAA,AIAA,ADAA,AEAA;ATCA,AMAA,ARAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AOAA,AGCA;AGAA,AVAA,AMAA,ARAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AOAA,IMAM+D,SAAS,GAAG7C,OAAO,CAAC,yBAAD,CAAzB;AVCA,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AOAA;AMAA,AVCA,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,IaDMC,KAAK,GAAGD,OAAO,CAAC,2BAAD,CAArB;AVEA,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA;AaDA,AVEA,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,IaFM8C,KAAK,GAAG9C,OAAO,CAAC,kBAAD,CAArB;AVGA,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AWLA,ADCO,AEDP,IDAMD,ADCOjB,AEDPmB,KAAK,EDAE,CCACD,EDAEA,KDCY,AEDP,CAAC,CDAC,CAAC,ADCO,SCDR,CAAvB,SCAqB,CAArB;ACIAmC,AVEA,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AUJEpD,CGED,CAAC,AHFAA,MAAM,EAAE,EGET,CAAD,CAAcgE,KAAd,AHH+B,CGGX,YAAY;AAC9B,AVEF,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AWNA,ADEE/D,AEDK,EFCLA,ECFIiB,ACCO8B,ECGPiB,EHFE,CCFG,CDED,ECFIhD,EEIA,ADHS,GCGN,ADHS,EDDL,ADAU,CCAT,CEID6C,KDHRd,ICGiB,CAAC7B,IAAd,CACb,ADJsB,CAAS8B,IDDd,CAArB,GCC0B,EAAmBC,IAAnB,EAAyB,kBCGlC,EACwB;AACrC,AVCJ,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AWLA,ADCEhD,AEDA+C,EFCA/C,AEDA+C,GFCG,EAAE,GEDG,CAACE,KFFoB,CEE7B,6BCEe,CAAf,ODF6CD,IAAI,CAAC7B,IAAlD;ACOA0C,AVDF,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AUJE5D,AEDAiD,ECMAW,AHLA5D,AEDAiD,CAAC,ICMI,CAACJ,CHLC,EAAE,IEDHE,GCMN,CAAiBE,ADNP,CCMQ,AHTW,AEGlB/B,CCMQ,GDNlB,EAAD,CAAmB8B,MCMD,ADNlB,CCMA,EAAkCc,QAAlC,0CDNqEf,IAAI,CAAC9B,KAA1E,aAFiD,CAEyC;ACO1F8C,AVDF,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AUJE9D,EGKA8D,AHLA9D,MAAM,EAAE,MGKM,EHVe;AGa9B,AVHD,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AUJEC,AEDA+C,CCFF,CHGE/C,AEDA+C,CAAC,GFCG,EAAE,OEDAF,EFLuB,EEKnB,CAAC7B,IAAV,EAAD,CAAmB8B,MAAnB,CAA0BjC,KAAK,CAACV,YAAN,CAAmBI,cAA7C,EAJiD,CAIa;ACWhE,AVLA,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AUJEN,EAAAA,IAAI,EAAE,SAPuB;APY/B,AFAA,AIAA,ADAA,AIAA,AFAA,AJAA,AFAA,AUJEC,AEDA6C,EFCA7C,AEDA6C,CAAC,IFCI,EAAE,MEDDF,IAAI,CAAC7B,IAAV,EAAD,CAAmB8B,MAAnB,CAA0BjC,KAAK,CAACV,YAAN,CAAmBG,gBAA7C,EANiD,CAMe;ATMlE,AFAA,AIAA,ADAA,AIAA,ANAA,AFAA,AUb+B,CAAxB;APcP,AFAA,AIAA,ADAA,AIAA,ANAA,AFAA,AYLEyC,EAAAA,CAAC,YAAKF,IAAI,CAAC7B,IAAV,wBAAD,CAAqCgC,EAArC,CAAwC,OAAxC,EAAiD,YAAW;ATM9D,AFAA,AIAA,ADAA,AIAA,ANAA,AFAA,AUJO,AEFyD,IFEnD7C,YAAY,GAAG;AGS5B,AVJA,AFAA,AIAA,ADAA,AIAA,ANAA,AFAA,AUJEC,AEFE,EFEFA,MEFM6C,CCUCY,KHRK,MEFM,GCUpB,ADVuBd,CAAC,ECUE,UDVGF,IAAI,CFCL,AEDM7B,IAAV,kBAAD,CAA+BkC,WAA/B,CAA2CrC,KAAK,CAACV,YAAN,CAAmBO,iBAA9D,CAAnB;ACcF,AVPF,AFAA,AIAA,ADAA,AIAA,ANAA,AFAA,AUJEL,AEFI0C,EFEJ1C,EEFI0C,CAAC,MFEI,MEFCF,IAAI,CAAC7B,IAAV,uBAAD,CAAoCgC,EAApC,CAAuC,OAAvC,CFAsB,CEA0B,UAASG,CAAT,EAAY;ACchEJ,AVPF,AFAA,AIAA,ADAA,AIAA,ANAA,AFAA,AUJEzC,AEFM8B,ECaNW,AHXAzC,CGWC,CAAC,EDbI8B,OAAO,CAACC,GAAR,CFEU,AEFE,GCajB,CAAD,CAAqBW,EAArB,CAAwB,OAAxB,CDbM,CCa2B,UAAUG,CAAV,EAAa,sDHdpB;AGexB,AVPJ,AFAA,AIAA,AGAA,ARAA,AUJE5C,EAAAA,MGWM4C,CAAC,CAACC,MHXM,CGWR,KAAc,EAAlB,EAAsB,sEHfE;AGgBtB,AVPN,AFAA,AIAA,AGAA,ARAA,AWPO,ADGL5C,AEHM,EFGNA,ECHWM,IAAI,EEcPC,ADdEoC,CDAQ,ACAP,CAACC,GCcC,GAAGL,AHXA,CGWC,ADdP,CCcQ,AFdPjC,IAAO,ACAM,CDAIC,CCAtB,EAAsB,EDAV,EAAiB,KEclB,CAAD,CAAqBsC,GAArB,EAAZ,0CHhBsB;AGiBtB,AVPN,AFAA,AIAA,AGAA,ARAA,AWPE,ADGA5C,AEHQ2B,EFGR3B,KCHKM,CCAGqB,ECcA0B,EFdR,GAAa/C,ADGA,AEHE,CAACsB,GAAR,CDAR,ACAoB,CCcD,GAAG,IAAIoB,SAAS,ADd3B,CCc4B3C,IAAd,CAAmBC,KAAnB,CAAlB,kBHjBsB;AGmBtBgC,AVRN,AFAA,AIAA,AGAA,ARAA,AWPE,ADGArC,AEHQmC,EFGRnC,IGYIqC,CAAC,AFfA/B,CEeC,ADfE6B,GDAR,CCAY,CAAC9B,CDADJ,ICAJ,CFGS,ECHE,ACAEoC,CDAD9B,ACAE,GCejB,CAAD,CAAqBoC,GAArB,AFfQ,CEeiB,CFf7B,CEeI,CDfuBR,CCWH,CAIU,EDfH,CAAC7B,IAAV,uBAAD,CAAoCqC,GAApC,EAAb;ATQV,AFAA,AIAA,AGAA,AGPC,ADL2B,AEKlBN,CDHH,ADFA,OEKGA,CAAC,YAAKF,IAAI,CAAC7B,IAAV,uBAAD,CAAoCkC,WAApC,qDAA2FL,IAAI,CAAC9B,KAAhG;ACeJ2C,AVPN,AFAA,AIAA,AGAA,AGJA,ACHS,MCcHA,KAAK,CAACf,UAAN,CAAiBI,CAAC,CAAC,YAAD,CAAlB,EAAkCe,WAAlC;AACD,AVPL,AFAA,AIAA,AGAA,AIPO,KAPD;ACsBH,AVPH,AFAA,AIAA,AGAA,AIPG,GCMD,ADhBA;AC0BAf,AVRF,AFAA,AIAA,AGAA,AINEA,ECcAA,ADdAA,CCcC,ADdA,CCcC,WDdIF,IAAI,CAAC7B,ECcV,CAAD,CAAsBgC,ADdrB,ECcD,CAAyB,OAAzB,EAAkC,YAAY,EDd9C,CAAuCA,EAAvC,CAA0C,OAA1C,EAAmD,YAAW;ACe5D,AVRJ,AFAA,AIAA,AGAA,AIPkE,QCe1DjC,KAAK,GAAGgC,CAAC,CAAC,iBAAD,CAAD,CAAqBM,GAArB,EAAZ;AACAjB,AVRJ,AFAA,AIAA,AGAA,AIPIW,ICeAX,ADfAW,CAAC,MCeM,CAACV,GAAR,CAAY,CDfNQ,IAAI,CAAC7B,ECeX,EDfC,EAAD,CAAmBsC,MAAnB;ACgBAlB,AVRJ,AFAA,AIAA,AGAA,AIPG,GAFD,CCiBEA,OAAO,CAACC,GAAR,CAAYtB,KAAZ;AAEA,AVTJ,AFAA,AIAA,AGAA,AIPC,CAvBM,OCuCC+C,WAAW,GAAG,IAAIL,SAAS,CAAC3C,IAAd,CAAmBC,KAAnB,CAAlB;AACAqB,AVTJ,AFAA,AIAA,AGAA,IKSIA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,AVTJ,AFAA,AIAA,AGAA,IKSIA,OAAO,CAACC,GAAR,CAAYyB,WAAZ;AAEAf,AVVJ,AFAA,AIAA,AGAA,IKUIA,CAAC,CAAC,iBAAD,CAAD,CAAqBM,GAArB,CAAyB,EAAzB,EAT4C,CASd;AVTlC,AFAA,AIAA,AGAA,AGRO,ACDA,IDCMnC,ACDAqC,IDCI,GAAG,CCDC,GAAG,KDCXrC,IAAO,ACDPqC,CDCiBpC,IAAV,EAAgBC,CCDZ,CAASwB,GDCb,EAAuB,GCDnB,EAAmBC,IAAnB,EAAyB;ACmB7Ca,AVTJ,AFAA,AIAA,AGAA,AGRE,ACDAX,EAAAA,CAAC,CCkBCW,GFjBGvC,EEiBE,CAACwB,CFjBR,GAAYxB,CCDN0B,GDCN,CCDU,CCkBR,ADlBS7B,CCkBQ+B,CAAC,CAAC,CDlBpB,EAAD,CAAmBS,IAA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","file":"main.1f19ae8e.js","sourceRoot":"..","sourcesContent":["'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","/**\n * Secure random string generator with custom alphabet.\n *\n * Alphabet must contain 256 symbols or less. Otherwise, the generator\n * will not be secure.\n *\n * @param {generator} random The random bytes generator.\n * @param {string} alphabet Symbols to be used in new random string.\n * @param {size} size The number of symbols in new random string.\n *\n * @return {string} Random string.\n *\n * @example\n * const format = require('nanoid/format')\n *\n * function random (size) {\n *   const result = []\n *   for (let i = 0; i < size; i++) {\n *     result.push(randomByte())\n *   }\n *   return result\n * }\n *\n * format(random, \"abcdef\", 5) //=> \"fbaef\"\n *\n * @name format\n * @function\n */\nmodule.exports = function (random, alphabet, size) {\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  var step = Math.ceil(1.6 * mask * size / alphabet.length)\n  size = +size\n\n  var id = ''\n  while (true) {\n    var bytes = random(step)\n    for (var i = 0; i < step; i++) {\n      var byte = bytes[i] & mask\n      if (alphabet[byte]) {\n        id += alphabet[byte]\n        if (id.length === size) return id\n      }\n    }\n  }\n}\n\n/**\n * @callback generator\n * @param {number} bytes The number of bytes to generate.\n * @return {number[]} Random bytes.\n */\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nmodule.exports = 0;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\n/** Probably move this off to a module later */\nexport const primaryColorMap = {\n  yellow: '#b58900',\n  orange: '#cb4b16',\n  red: '#dc322f',\n  magenta: '#d33682',\n  violet: '6c71c4',\n  blue: '#268bd2',\n  cyan: '#2aa198',\n  green: '#859900',\n};\n\nexport const htmlSnippets = {\n  taskTemplate: `<li class='task'></div>`,\n  taskTitle: `<div class='task-title col-8'>Task Title</div>`,\n  taskDeleteButton: `<button class='btn col-1 material-icons' id='task-delete-button'>delete</button>`,\n  taskEditButton: `<button class='btn col-1 material-icons' id='task-edit-button'>edit</button>`,\n  taskUpdateButton: `<button class='btn task-update-button col-1>Update Task</button>`,\n  taskAddButton: `<div class='task-add-button col-1>Add Task</div>`,\n  taskEditSearchBar: `<input class=\"col-10 d-inline\" type=\"text\" minlength=\"1\" id=\"edit-task-input\" placeholder=\"New description goes here\">`,\n};","'use strict';\n\nconst shortid = require('shortid');\nconst style = require('./html-templates.js')\n\n/**\n * Constructs task objects.\n * @constructor\n * @param {String} title - The short version of the task. Max 50 characters.\n * @param {String} description - The long version of what the task is.\n * @param {*} dueDate - The date the task is due for completion by.\n * - Should be implemented with moment.js.\n * - Should be DD/MM/YYYY format.\n * @param {String} list - The name of the list which this task belongs to.\n * Defaults to inbox.\n */\nexport const Task = function (title) {\n  this.title = title;\n  this.uuid = shortid.generate();\n};\n\n\n\n/**\n* Creates a To-Do list.\n* @constructor\n* @param {String} name - The name of the list.\n* @param {String} color - The color to be selected, e.g. 'yellow'.\n* Defaults to a random color from primaryColorList.\n*/\nexport const List = function (name, color) {\n  this.name = name;\n  this.uuid = shortid.generate();\n  this.tasks = [];\n\n  // If list color wasn't selected, pick one from themese at random\n  if (!color) {\n    let colorNames = Object.keys(style.primaryColorMap);\n    randomColorIndex = Math.floor(colorNames.length * Math.random());\n    this.color =\n      style.primaryColorList(randomColorIndex);\n  } else {\n    this.color = color;\n  }\n\n  this.addTask = function() {\n    this.tasks.add(new Task());\n  };\n\n  this.deleteTask = function(uuid) {\n    let taskIndex = this.findTaskByUuid(uuid);\n\n    // If a hit was found, then delete that item from the array \n    if (taskIndex) {\n      console.log(`Deleting item from list...`)\n      let deletedContent = this.tasks.splice(index, 1);\n\n      // Sanity checks\n      if (deletedContent) {\n        console.error(`No items found in list: ${this.name} with ` +\n            `UUID: ${uuid}`);\n      } else if (deletedContent.length > 1) {\n        console.error(`Accidentally deleted ${deletedContent.length} items.`)\n      } else if (deletedContent) {\n        console.log(`Task was deleted from this list. ` +\n        `UUID: ${this.tasks[i].uuid}`);\n      }\n    }\n  }\n}","'use strict';\n\nconst style = require('./html-templates.js')\n\nexport const appendTask = function(selector, task) {\n  selector.append(`<li class='task-item' id='${task.uuid}'></li>`);\n  $(`#${task.uuid}`).append(`<div class=\"task-title col-10 d-inline\">${task.title}</div>`); // put text into task element\n  \n  $(`#${task.uuid}`).append(style.htmlSnippets.taskEditButton); // add edit button\n  \n  $(`#${task.uuid}`).append(style.htmlSnippets.taskDeleteButton); // add delete button\n  \n  $(`#${task.uuid} #task-edit-button`).on('click', function() { // Add edit button click listener\n    let removedStuff = $(`#${task.uuid} .task-title`).replaceWith(style.htmlSnippets.taskEditSearchBar);\n      $(`#${task.uuid} #edit-task-input`).on('keyup', function(e) {\n        console.log('keyup detected')\n        if (e.keyCode === 13) {\n          console.log('enter detected.')\n          task.title = $(`#${task.uuid} #edit-task-input`).val();\n          $(`#${task.uuid} #edit-task-input`).replaceWith(`<div class=\"task-title col-10 d-inline\">${task.title}</div>`);\n        }\n      });\n  });\n\n  $(`#${task.uuid} #task-delete-button`).on('click', function() { // Add delete button click listener\n    $(`#${task.uuid}`).remove();\n  });\n}\n\nexport const editTask = function(selector, task) {\n  $(`#${task.uuid}`).html(style.htmlSnippets.taskEditSearchBar);\n}","'use strict';\n\nconst structure = require('./utils/constructors.js');\nconst style = require('./utils/html-templates.js');\nconst utils = require('./utils/utils.js');\n\n$('document').ready(function () {\n  let testTask = new structure.Task(\n    'This task is a sample To-Do item.', // title\n    'This is a long description of a test task.', // description\n  );\n\n  utils.appendTask($('.task-list'), testTask);\n  initializePage();\n  \n\n})\n\n\n/**\n * Wires up all buttons to actions, initializes all listeners that should be \n * active at page load.\n */\nfunction initializePage() {\n\n\n\n  // Add listener for submittal of changed task title.\n  $('#add-task-input').on('keyup', function (e) {\n    if (e.keyCode === 13) {\n      let title = $('#add-task-input').val();\n      let createdTask = new structure.Task(title);\n\n      $('#add-task-input').val(''); // clear input field after enter\n      utils.appendTask($('.task-list'), createdTask);\n    } \n  });\n\n  $('#add-task-button').on('click', function () {\n    let title = $('#add-task-input').val();\n    console.log('title:');\n    console.log(title);\n\n    let createdTask = new structure.Task(title);\n    console.log('createdTask:')\n    console.log(createdTask);\n\n    $('#add-task-input').val(''); // clear input field after enter\n    utils.appendTask($('.task-list'), createdTask);\n  });\n\n  listenForMenuButton();\n}\n\n/**\n * Listens for the menu button click and modifies the page accordingly.\n */\nfunction listenForMenuButton() {\n  $('#menu-button').click(function() {\n    $('aside').toggleClass('active');\n  });\n\n  $('#the-menu-button').click(function() {\n    $('aside').toggleClass('active');\n  });\n}"]}